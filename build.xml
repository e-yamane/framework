<?xml version="1.0" encoding="Shift_JIS"?>

<project name="Framework" basedir="." default="dummy">
  <import file="../framework/build-common.xml" />

  <import file="../framework/build-common.xml" />
  <target name="makeOkumuraConfig" description="奥村開発環境用のbeans.xmlを作成する">
    <property name="filtering.filename" value="${conf.dir}/filtering.okumura.properties" />
    <antcall target="makeConfig" />
  </target>

<!--
  <target name="makeReleaseConfig" description="リリースモジュール用のbeans.xmlを作成する">
    <property name="filtering.filename" value="${conf.dir}/filtering.release.properties" />
    <antcall target="makeConfig" />
  </target>
-->

  <target name="makeConfig" depends="init-task, filter-check, filter-exists" if="filtering.filename.present" description="EIを実行する">
    <antcall target="makeConfigBase" />
    <basename property="conf.target.name" file="${filtering.filename}" />
    <dirname property="conf.target.dir" file="${filtering.filename}" />
    <mkdir dir="${conf.dir}/tmp" />
    <native2ascii src="${conf.target.dir}" dest="${conf.dir}/tmp" includes="${conf.target.name}" />
    <filter filtersfile="${conf.dir}/tmp/${conf.target.name}" />
    <copy file="${conf.dir}/template/beans.xml" tofile="${src.dir}/beans.xml" filtering="true" overwrite="true" />
    <copy file="${conf.dir}/template/log4j.properties" tofile="${src.dir}/log4j.properties" filtering="true" overwrite="true" />
    <native2ascii src="${resource.dir}" dest="${src.dir}" includes="**/*.properties" />
    <delete dir="${conf.dir}/tmp" />
    <echo message="Eclipse上で実行している場合は、F5を押して最新状態にしてください。" />
  </target>

  <target name="makeSchemaAccessor" description="テーブルレイアウト、create table文、Javaソース、マッピングファイル、hibernateConfigを作成する">
    <ant antfile="../framework/build-common.xml" target="makeSchemaAccessor" dir="${my.build.dir}" />
    <antcall target="makeMultipleSQL" />
  </target>

  <target name="makeMultipleSQL">
    <filter token="torque.schema.dir"           value="${torque.schema.dir}" />
    <filter token="torque.sql.dir"              value="${torque.sql.dir}/oracle" />
    <filter token="torque.database.type"        value="oracle" />
    <copy file="${framework.root}/build-torque.properties" tofile="torque-gen/build.properties" filtering="true" overwrite="true" />
    <replace file="torque-gen/build.properties" token="\" value="/" />
    <echo message="Create Table文を作成します。" />
    <antcall target="execAnt">
      <param name="build.file"  value="${basedir}/torque-gen/build-torque.xml" />
      <param name="exec.target" value="sql" />
    </antcall>
    <filter token="torque.schema.dir"           value="${torque.schema.dir}" />
    <filter token="torque.sql.dir"              value="${torque.sql.dir}/postgresql" />
    <filter token="torque.database.type"        value="postgresql" />
    <copy file="${framework.root}/build-torque.properties" tofile="torque-gen/build.properties" filtering="true" overwrite="true" />
    <replace file="torque-gen/build.properties" token="\" value="/" />
    <echo message="Create Table文を作成します。" />
    <antcall target="execAnt">
      <param name="build.file"  value="${basedir}/torque-gen/build-torque.xml" />
      <param name="exec.target" value="sql" />
    </antcall>
  </target>

  <target name="makeJar" depends="compile" description="Jarファイルを作成する">
    <jar destfile="./target/rd-framework.jar" basedir="./target/classes" excludes="net/**/*.class" />
    <copy file="libs/cglib/cglib-2.1.3.jar" tofile="./target/cglib-2.1.3.jar" />
    <jar destfile="./target/cglib-2.1.3.jar" basedir="./target/classes" includes="net/**/*.class" update="true" />
  </target>

  <target name="compile">
    <mkdir dir="./target" />
    <delete>
      <fileset dir="./target" includes="**/*"/>
    </delete>
    <mkdir dir="./target/classes" />
    <javac
        srcdir="src/java"
        source="1.6"
        target="1.6"
        destdir="./target/classes"
        debug="true"
    >
      <src path="src/java" />
      <src path="src/testingFramework" />
      <classpath>
        <fileset dir="./libs">
          <include name="**/*.jar" />
        </fileset>
      </classpath>
    </javac>
    <copy todir="./target/classes">
      <fileset dir="src/java">
        <include name="org/dbunit/ant/*.dtd" />
      </fileset>
    </copy>
  </target>
  
  <target name="dummy">
    <echo message="xxxxx" />
  </target>
</project>
